definitions:
  controller.CompleteEmailValidation:
    properties:
      key:
        description: Key is the 6-digit number from the confirmation email
        example: "010990"
        type: string
    type: object
  controller.ErrorRes:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  controller.RequestEmailValidation:
    properties:
      email:
        example: kilgore@kilgore.trout
        type: string
    type: object
  controller.SubmitReferralCodeRequest:
    properties:
      referralCode:
        example: ANB95NBQA1N5
        type: string
    type: object
  controller.SubmitReferralCodeResponse:
    properties:
      message:
        type: string
    type: object
  controller.UserResponse:
    properties:
      agreedTosAt:
        description: AgreedTosAt is the time at which the user last agreed to the
          terms of service.
        example: "2021-12-01T09:00:41Z"
        type: string
      countryCode:
        description: CountryCode, if present, is a valid ISO 3166-1 alpha-3 country
          code.
        example: USA
        type: string
      createdAt:
        description: CreatedAt is when the user first logged in.
        example: "2021-12-01T09:00:00Z"
        type: string
      email:
        $ref: '#/definitions/controller.UserResponseEmail'
        description: Email describes the user's email and the state of its confirmation.
      id:
        description: ID is the user's DIMO-internal ID.
        example: ChFrb2JsaXR6QGRpbW8uem9uZRIGZ29vZ2xl
        type: string
      referralCode:
        description: |-
          ReferralCode is the user's referral code to be given to others. It is an 8 alphanumeric code,
          only present if the account has a confirmed Ethereum address.
        example: ANB95N
        type: string
      referredAt:
        example: "2021-12-01T09:00:41Z"
        type: string
      referredBy:
        example: 0x3497B704a954789BC39999262510DE9B09Ff1366
        type: string
      updatedAt:
        description: UpdatedAt reflects the time of the most recent account changes.
        example: "2021-12-01T09:00:00Z"
        type: string
      web3:
        $ref: '#/definitions/controller.UserResponseWeb3'
        description: Web3 describes the user's blockchain account.
    type: object
  controller.UserResponseEmail:
    properties:
      address:
        description: Address is the email address for the user.
        example: koblitz@dimo.zone
        type: string
      confirmationSentAt:
        description: |-
          ConfirmationSentAt is the time at which we last sent a confirmation email. This will only
          be present if we've sent an email but the code has not been sent back to us.
        example: "2021-12-01T09:01:12Z"
        type: string
      confirmed:
        description: Confirmed indicates whether the user has confirmed the address
          by entering a code.
        example: false
        type: boolean
    type: object
  controller.UserResponseWeb3:
    properties:
      address:
        description: Address is the Ethereum address associated with the user.
        example: 0x142e0C7A098622Ea98E5D67034251C4dFA746B5d
        type: string
      confirmed:
        description: |-
          Confirmed indicates whether the user has confirmed the address by signing a challenge
          message.
        example: false
        type: boolean
      inApp:
        description: InApp indicates whether this is an in-app wallet, managed by
          the DIMO app.
        example: "false"
        type: string
      used:
        description: |-
          Used indicates whether the user has used this address to perform any on-chain
          actions like minting, claiming, or pairing.
        example: false
        type: boolean
    type: object
  controller.UserUpdateRequest:
    properties:
      countryCode:
        description: CountryCode should be a valid ISO 3166-1 alpha-3 country code
        example: USA
        type: string
    type: object
info:
  contact: {}
  title: DIMO Accounts API
  version: "1.0"
paths:
  /v1/accounts:
    delete:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controller.ErrorRes'
        "409":
          description: Returned if the user still has devices.
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Delete the authenticated user. Fails if the user has any devices.
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.UserResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      security:
      - BearerAuth: []
      summary: Get attributes for the authenticated user.
    put:
      consumes:
      - application/json
      parameters:
      - description: New field values
        in: body
        name: userUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/controller.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Modify attributes for the authenticated user
  /v1/accounts/agree-tos:
    post:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Agree to the current terms of service
  /v1/accounts/confirm-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Specifies the key from the email
        in: body
        name: confirmEmailRequest
        required: true
        schema:
          $ref: '#/definitions/controller.CompleteEmailValidation'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Submit an email confirmation key
  /v1/accounts/submit-referral-code:
    post:
      parameters:
      - description: ReferralCode is the 6-digit, alphanumeric referral code from
          another user.
        in: body
        name: submitReferralCodeRequest
        required: true
        schema:
          $ref: '#/definitions/controller.SubmitReferralCodeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SubmitReferralCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Takes the referral code, validates and stores it
  /v1/link/email:
    post:
      parameters:
      - description: Specifies the email to be linked
        in: body
        name: confirmEmailRequest
        required: true
        schema:
          $ref: '#/definitions/controller.RequestEmailValidation'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controller.ErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Send a confirmation email to the authenticated user
  /v1/link/email/token:
    post:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Link an email to existing wallet account; require a signed JWT from
        auth server
  /v1/link/wallet/token:
    post:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorRes'
      summary: Link a wallet to existing email account; require a signed JWT from
        auth server
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
