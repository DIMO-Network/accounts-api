definitions:
  internal_controller.ErrorRes:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: Malformed request body.
        type: string
    type: object
  internal_controller.RequestEmailValidation:
    properties:
      address:
        example: kilgore@kilgore.trout
        type: string
    type: object
  internal_controller.StandardRes:
    properties:
      message:
        example: Operation succeeded.
        type: string
    type: object
  internal_controller.SubmitReferralCodeRequest:
    properties:
      code:
        example: ANBJN5
        type: string
    type: object
  internal_controller.SubmitReferralCodeResponse:
    properties:
      message:
        type: string
    type: object
  internal_controller.TokenBody:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
    type: object
  internal_controller.UserResponse:
    properties:
      acceptedTosAt:
        description: AcceptedTOSAt is the time at which the user last agreed to the
          terms of service.
        example: "2021-12-01T09:00:41Z"
        type: string
      countryCode:
        description: CountryCode, if present, is a valid ISO 3166-1 alpha-3 country
          code.
        example: USA
        type: string
      createdAt:
        description: CreatedAt is when the user first logged in.
        example: "2021-12-01T09:00:00Z"
        type: string
      email:
        allOf:
        - $ref: '#/definitions/internal_controller.UserResponseEmail'
        description: Email describes the user's email and the state of its confirmation.
      id:
        description: ID is the user's DIMO-internal ID.
        example: 2mD8CtraxOCAAwIeydt2Q4oCiAQ
        type: string
      updatedAt:
        description: UpdatedAt reflects the time of the most recent account changes.
        example: "2021-12-01T09:00:00Z"
        type: string
      wallet:
        allOf:
        - $ref: '#/definitions/internal_controller.UserResponseWeb3'
        description: Wallet describes the user's blockchain account.
    type: object
  internal_controller.UserResponseEmail:
    properties:
      address:
        description: Address is the email address for the user.
        example: koblitz@dimo.zone
        type: string
      confirmedAt:
        description: ConfirmedAt indicates the time at which the user confirmed the
          email. It may be null.
        example: "2021-12-01T09:00:41Z"
        type: string
    type: object
  internal_controller.UserResponseWeb3:
    properties:
      address:
        description: Address is the Ethereum address associated with the user.
        example: 0x142e0C7A098622Ea98E5D67034251C4dFA746B5d
        type: string
    type: object
  internal_controller.UserUpdateRequest:
    properties:
      countryCode:
        description: CountryCode should be a valid ISO 3166-1 alpha-3 country code
        example: USA
        type: string
    type: object
info:
  contact: {}
  title: DIMO Accounts API
  version: "1.0"
paths:
  /v1/account:
    delete:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.StandardRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
        "409":
          description: Returned if the user still has devices.
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      summary: Delete the authenticated user. Fails if the user has any devices.
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.UserResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      security:
      - BearerAuth: []
      summary: Get attributes for the authenticated user.
    post:
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_controller.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      security:
      - BearerAuth: []
      summary: Create user account using an auth token in the header.
    put:
      consumes:
      - application/json
      parameters:
      - description: New field values
        in: body
        name: userUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controller.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      summary: Modify attributes for the authenticated user
  /v1/account/accept-tos:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.StandardRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      summary: Agree to the current terms of service
  /v1/account/link/email:
    post:
      parameters:
      - description: Specifies the email to be linked
        in: body
        name: confirmEmailRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controller.RequestEmailValidation'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      summary: Send a confirmation email to the authenticated user
      tags:
      - email
  /v1/account/link/email/token:
    post:
      parameters:
      - description: Includes the email token
        in: body
        name: linkEmailRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controller.TokenBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.StandardRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      summary: Link an email to existing wallet account; require a signed JWT from
        auth server
      tags:
      - email
  /v1/account/link/wallet/token:
    post:
      parameters:
      - description: JWT with an ethereum_address claim.
        in: body
        name: linkWalletRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controller.TokenBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.StandardRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      summary: Link a wallet to an existing account.
      tags:
      - wallet
  /v1/accounts/referral/submit:
    post:
      parameters:
      - description: ReferralCode is the 6-digit, alphanumeric referral code from
          another user.
        in: body
        name: submitReferralCodeRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controller.SubmitReferralCodeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controller.SubmitReferralCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controller.ErrorRes'
      summary: Takes the referral code, validates and stores it
      tags:
      - referral
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
