// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package services

import (
	"context"

	"github.com/Khan/genqlient/graphql"
	"github.com/ethereum/go-ethereum/common"
)

// The AftermarketDevicesFilter input is used to specify filtering criteria for querying aftermarket devices.
// Aftermarket devices must match all of the specified criteria.
type AftermarketDevicesFilter struct {
	Beneficiary    *common.Address `json:"beneficiary"`
	ManufacturerId *int            `json:"manufacturerId"`
	// Filter for aftermarket devices owned by this address.
	Owner *common.Address `json:"owner"`
}

// GetBeneficiary returns AftermarketDevicesFilter.Beneficiary, and is useful for accessing the field via an interface.
func (v *AftermarketDevicesFilter) GetBeneficiary() *common.Address { return v.Beneficiary }

// GetManufacturerId returns AftermarketDevicesFilter.ManufacturerId, and is useful for accessing the field via an interface.
func (v *AftermarketDevicesFilter) GetManufacturerId() *int { return v.ManufacturerId }

// GetOwner returns AftermarketDevicesFilter.Owner, and is useful for accessing the field via an interface.
func (v *AftermarketDevicesFilter) GetOwner() *common.Address { return v.Owner }

// The VehiclesFilter input is used to specify filtering criteria for querying vehicles.
// Vehicles must match all of the specified criteria.
type VehiclesFilter struct {
	// Filter for vehicles by device definition id.
	DeviceDefinitionId *string `json:"deviceDefinitionId"`
	// Make filters for vehicles that are of the given make.
	Make *string `json:"make"`
	// Filter for vehicles produced by a particular manufacturer, specified by manufacturer token id.
	ManufacturerTokenId *int `json:"manufacturerTokenId"`
	// Model filters for vehicles that are of the given model.
	Model *string `json:"model"`
	// Owner filters for vehicles that this address owns.
	Owner *common.Address `json:"owner"`
	// Privileged filters for vehicles to which the given address has access. This includes vehicles
	// that this address owns.
	Privileged *common.Address `json:"privileged"`
	// Year filters for vehicles that are of the given year.
	Year *int `json:"year"`
}

// GetDeviceDefinitionId returns VehiclesFilter.DeviceDefinitionId, and is useful for accessing the field via an interface.
func (v *VehiclesFilter) GetDeviceDefinitionId() *string { return v.DeviceDefinitionId }

// GetMake returns VehiclesFilter.Make, and is useful for accessing the field via an interface.
func (v *VehiclesFilter) GetMake() *string { return v.Make }

// GetManufacturerTokenId returns VehiclesFilter.ManufacturerTokenId, and is useful for accessing the field via an interface.
func (v *VehiclesFilter) GetManufacturerTokenId() *int { return v.ManufacturerTokenId }

// GetModel returns VehiclesFilter.Model, and is useful for accessing the field via an interface.
func (v *VehiclesFilter) GetModel() *string { return v.Model }

// GetOwner returns VehiclesFilter.Owner, and is useful for accessing the field via an interface.
func (v *VehiclesFilter) GetOwner() *common.Address { return v.Owner }

// GetPrivileged returns VehiclesFilter.Privileged, and is useful for accessing the field via an interface.
func (v *VehiclesFilter) GetPrivileged() *common.Address { return v.Privileged }

// GetYear returns VehiclesFilter.Year, and is useful for accessing the field via an interface.
func (v *VehiclesFilter) GetYear() *int { return v.Year }

// __aftermarketDevicesInput is used internally by genqlient
type __aftermarketDevicesInput struct {
	First    *int                      `json:"first"`
	FilterBy *AftermarketDevicesFilter `json:"filterBy"`
}

// GetFirst returns __aftermarketDevicesInput.First, and is useful for accessing the field via an interface.
func (v *__aftermarketDevicesInput) GetFirst() *int { return v.First }

// GetFilterBy returns __aftermarketDevicesInput.FilterBy, and is useful for accessing the field via an interface.
func (v *__aftermarketDevicesInput) GetFilterBy() *AftermarketDevicesFilter { return v.FilterBy }

// __vehiclesInput is used internally by genqlient
type __vehiclesInput struct {
	First    *int            `json:"first"`
	FilterBy *VehiclesFilter `json:"filterBy"`
}

// GetFirst returns __vehiclesInput.First, and is useful for accessing the field via an interface.
func (v *__vehiclesInput) GetFirst() *int { return v.First }

// GetFilterBy returns __vehiclesInput.FilterBy, and is useful for accessing the field via an interface.
func (v *__vehiclesInput) GetFilterBy() *VehiclesFilter { return v.FilterBy }

// aftermarketDevicesAftermarketDevicesAftermarketDeviceConnection includes the requested fields of the GraphQL type AftermarketDeviceConnection.
// The GraphQL type's documentation follows.
//
// The Connection type for AftermarketDevice.
type aftermarketDevicesAftermarketDevicesAftermarketDeviceConnection struct {
	Nodes []aftermarketDevicesAftermarketDevicesAftermarketDeviceConnectionNodesAftermarketDevice `json:"nodes"`
}

// GetNodes returns aftermarketDevicesAftermarketDevicesAftermarketDeviceConnection.Nodes, and is useful for accessing the field via an interface.
func (v *aftermarketDevicesAftermarketDevicesAftermarketDeviceConnection) GetNodes() []aftermarketDevicesAftermarketDevicesAftermarketDeviceConnectionNodesAftermarketDevice {
	return v.Nodes
}

// aftermarketDevicesAftermarketDevicesAftermarketDeviceConnectionNodesAftermarketDevice includes the requested fields of the GraphQL type AftermarketDevice.
type aftermarketDevicesAftermarketDevicesAftermarketDeviceConnectionNodesAftermarketDevice struct {
	// The ERC-721 token id for the device.
	TokenId int `json:"tokenId"`
}

// GetTokenId returns aftermarketDevicesAftermarketDevicesAftermarketDeviceConnectionNodesAftermarketDevice.TokenId, and is useful for accessing the field via an interface.
func (v *aftermarketDevicesAftermarketDevicesAftermarketDeviceConnectionNodesAftermarketDevice) GetTokenId() int {
	return v.TokenId
}

// aftermarketDevicesResponse is returned by aftermarketDevices on success.
type aftermarketDevicesResponse struct {
	// List aftermarket devices.
	// Ordered by token id, descending.
	AftermarketDevices aftermarketDevicesAftermarketDevicesAftermarketDeviceConnection `json:"aftermarketDevices"`
}

// GetAftermarketDevices returns aftermarketDevicesResponse.AftermarketDevices, and is useful for accessing the field via an interface.
func (v *aftermarketDevicesResponse) GetAftermarketDevices() aftermarketDevicesAftermarketDevicesAftermarketDeviceConnection {
	return v.AftermarketDevices
}

// vehiclesResponse is returned by vehicles on success.
type vehiclesResponse struct {
	// List minted vehicles.
	//
	// For now, these are always ordered by token ID in descending order.
	Vehicles vehiclesVehiclesVehicleConnection `json:"vehicles"`
}

// GetVehicles returns vehiclesResponse.Vehicles, and is useful for accessing the field via an interface.
func (v *vehiclesResponse) GetVehicles() vehiclesVehiclesVehicleConnection { return v.Vehicles }

// vehiclesVehiclesVehicleConnection includes the requested fields of the GraphQL type VehicleConnection.
// The GraphQL type's documentation follows.
//
// The Connection type for Vehicle.
type vehiclesVehiclesVehicleConnection struct {
	Nodes []vehiclesVehiclesVehicleConnectionNodesVehicle `json:"nodes"`
}

// GetNodes returns vehiclesVehiclesVehicleConnection.Nodes, and is useful for accessing the field via an interface.
func (v *vehiclesVehiclesVehicleConnection) GetNodes() []vehiclesVehiclesVehicleConnectionNodesVehicle {
	return v.Nodes
}

// vehiclesVehiclesVehicleConnectionNodesVehicle includes the requested fields of the GraphQL type Vehicle.
type vehiclesVehiclesVehicleConnectionNodesVehicle struct {
	// The ERC-721 token id for the vehicle.
	TokenId int `json:"tokenId"`
}

// GetTokenId returns vehiclesVehiclesVehicleConnectionNodesVehicle.TokenId, and is useful for accessing the field via an interface.
func (v *vehiclesVehiclesVehicleConnectionNodesVehicle) GetTokenId() int { return v.TokenId }

// The query or mutation executed by aftermarketDevices.
const aftermarketDevices_Operation = `
query aftermarketDevices ($first: Int, $filterBy: AftermarketDevicesFilter) {
	aftermarketDevices(first: $first, filterBy: $filterBy) {
		nodes {
			tokenId
		}
	}
}
`

func aftermarketDevices(
	ctx_ context.Context,
	client_ graphql.Client,
	first *int,
	filterBy *AftermarketDevicesFilter,
) (*aftermarketDevicesResponse, error) {
	req_ := &graphql.Request{
		OpName: "aftermarketDevices",
		Query:  aftermarketDevices_Operation,
		Variables: &__aftermarketDevicesInput{
			First:    first,
			FilterBy: filterBy,
		},
	}
	var err_ error

	var data_ aftermarketDevicesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by vehicles.
const vehicles_Operation = `
query vehicles ($first: Int, $filterBy: VehiclesFilter) {
	vehicles(first: $first, filterBy: $filterBy) {
		nodes {
			tokenId
		}
	}
}
`

func vehicles(
	ctx_ context.Context,
	client_ graphql.Client,
	first *int,
	filterBy *VehiclesFilter,
) (*vehiclesResponse, error) {
	req_ := &graphql.Request{
		OpName: "vehicles",
		Query:  vehicles_Operation,
		Variables: &__vehiclesInput{
			First:    first,
			FilterBy: filterBy,
		},
	}
	var err_ error

	var data_ vehiclesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
